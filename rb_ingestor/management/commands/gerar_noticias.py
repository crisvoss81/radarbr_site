# rb_ingestor/management/commands/gerar_noticias.py
"""
Comando simples e confi√°vel para gerar not√≠cias no Render
Funciona sem depend√™ncias externas problem√°ticas
"""
import os
import sys
import django
from django.core.management.base import BaseCommand
from django.apps import apps
from django.utils import timezone
from django.utils.html import strip_tags
from slugify import slugify
from datetime import datetime, timedelta
import random

class Command(BaseCommand):
    help = "Comando simples e confi√°vel para gerar not√≠cias"

    def add_arguments(self, parser):
        parser.add_argument("--limit", type=int, default=3, help="N√∫mero de not√≠cias a criar")
        parser.add_argument("--force", action="store_true", help="For√ßa cria√ß√£o mesmo se similar existir")
        parser.add_argument("--debug", action="store_true", help="Mostra informa√ß√µes detalhadas")

    def handle(self, *args, **options):
        Noticia = apps.get_model("rb_noticias", "Noticia")
        Categoria = apps.get_model("rb_noticias", "Categoria")
        
        self.stdout.write("=== GERADOR DE NOT√çCIAS SIMPLES ===")
        
        # Verificar se j√° existem not√≠cias recentes
        recent_count = Noticia.objects.filter(
            criado_em__gte=timezone.now() - timedelta(hours=6)
        ).count()
        
        if not options["force"] and recent_count >= 5:
            self.stdout.write(f"‚ö†Ô∏è J√° existem {recent_count} not√≠cias recentes. Use --force para for√ßar.")
            return
        
        # T√≥picos pr√©-definidos
        topicos = [
            "Tecnologia no Brasil",
            "Economia brasileira atual", 
            "Esportes nacionais",
            "Cultura e entretenimento",
            "Pol√≠tica nacional",
            "Meio ambiente",
            "Educa√ß√£o no Brasil",
            "Sa√∫de p√∫blica",
            "Inova√ß√£o e startups",
            "Turismo nacional",
            "Ci√™ncia e pesquisa",
            "Arte e cultura",
            "Sustentabilidade",
            "Mercado de trabalho",
            "Tend√™ncias digitais"
        ]
        
        # Criar categoria geral se n√£o existir
        cat_geral, created = Categoria.objects.get_or_create(
            slug="geral",
            defaults={"nome": "Geral"}
        )
        
        if created:
            self.stdout.write(self.style.SUCCESS(f"‚úì Categoria criada: {cat_geral.nome}"))
        
        created_count = 0
        limit = options["limit"]
        
        if options["debug"]:
            self.stdout.write(f"üìä Total de not√≠cias no sistema: {Noticia.objects.count()}")
            self.stdout.write(f"üìä Not√≠cias recentes (6h): {recent_count}")
            self.stdout.write(f"üéØ Criando {limit} not√≠cias...")
        
        for i in range(limit):
            # Escolher t√≥pico aleat√≥rio
            topico = random.choice(topicos)
            
            # Gerar t√≠tulo √∫nico
            timestamp = timezone.now().strftime('%d/%m %H:%M')
            title = f"{topico} - {timestamp}"
            slug = slugify(title)[:180]
            
            # Verificar se j√° existe
            if not options["force"] and Noticia.objects.filter(slug=slug).exists():
                if options["debug"]:
                    self.stdout.write(f"‚ö† Pulando: {title} (j√° existe)")
                continue
            
            # Gerar conte√∫do simples
            conteudo = self._gerar_conteudo_simples(topico)
            
            # Criar not√≠cia
            try:
                noticia = Noticia.objects.create(
                    titulo=title,
                    slug=slug,
                    conteudo=conteudo,
                    publicado_em=timezone.now(),
                    categoria=cat_geral,
                    fonte_url=f"gerador-simples-{timezone.now().strftime('%Y%m%d-%H%M')}-{i}",
                    fonte_nome="RadarBR Gerador",
                    status=1,  # PUBLICADO
                    imagem_alt=f"Imagem relacionada a {topico}"
                )
                
                created_count += 1
                self.stdout.write(self.style.SUCCESS(f"‚úì Criado: {title}"))
                
                if options["debug"]:
                    self.stdout.write(f"   Slug: {slug}")
                    self.stdout.write(f"   Categoria: {cat_geral.nome}")
                    self.stdout.write(f"   Status: {noticia.status}")
                
            except Exception as e:
                self.stdout.write(self.style.ERROR(f"‚úó Erro ao criar '{title}': {e}"))
                if options["debug"]:
                    import traceback
                    traceback.print_exc()
        
        # Resumo final
        self.stdout.write(self.style.SUCCESS(f"\n=== CONCLU√çDO ==="))
        self.stdout.write(f"‚úÖ Not√≠cias criadas: {created_count}")
        self.stdout.write(f"üìä Total no sistema: {Noticia.objects.count()}")
        
        # Mostrar √∫ltimas not√≠cias criadas
        if created_count > 0:
            self.stdout.write(f"\nüì∞ √öltimas {min(3, created_count)} not√≠cias:")
            for n in Noticia.objects.order_by('-criado_em')[:3]:
                self.stdout.write(f"   ‚Ä¢ {n.titulo}")
        
        # Ping sitemap se criou not√≠cias
        if created_count > 0:
            try:
                from django.core.management import call_command
                call_command('ping_sitemap')
                self.stdout.write("‚úì Sitemap atualizado")
            except Exception as e:
                self.stdout.write(f"‚ö† Erro ao atualizar sitemap: {e}")

    def _gerar_conteudo_simples(self, topico):
        """Gera conte√∫do simples em HTML"""
        return f"""
        <div class="article-content">
            <h2>Sobre {topico}</h2>
            
            <p>Este √© um artigo gerado automaticamente sobre <strong>{topico}</strong>. 
            O conte√∫do aborda aspectos relevantes e atuais relacionados ao tema.</p>
            
            <h3>Principais Aspectos</h3>
            <ul>
                <li>Aspecto importante relacionado a {topico}</li>
                <li>Desenvolvimento atual no campo</li>
                <li>Impacto na sociedade brasileira</li>
            </ul>
            
            <h3>An√°lise</h3>
            <p>{topico} representa um tema de grande relev√¢ncia no contexto atual. 
            √â importante acompanhar os desenvolvimentos e tend√™ncias relacionadas 
            a este assunto para manter-se informado.</p>
            
            <h3>Conclus√£o</h3>
            <p>Este artigo fornece uma vis√£o geral sobre {topico}, destacando 
            aspectos importantes e relevantes para o p√∫blico brasileiro.</p>
            
            <p><em>Artigo gerado automaticamente pelo sistema RadarBR.</em></p>
        </div>
        """
