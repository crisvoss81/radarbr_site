# rb_ingestor/management/commands/manual_article.py
"""
Comando simples para publicar artigo manual
"""
from django.core.management.base import BaseCommand
from django.utils import timezone
from django.utils.html import strip_tags
from slugify import slugify
from django.apps import apps

class Command(BaseCommand):
    help = "Publica artigo com t√≥pico manual"

    def add_arguments(self, parser):
        parser.add_argument("topic", type=str, help="T√≥pico para o artigo")
        parser.add_argument("--category", type=str, default="tecnologia", help="Categoria")
        parser.add_argument("--dry-run", action="store_true", help="Apenas simula")

    def handle(self, *args, **options):
        self.stdout.write("=== ARTIGO MANUAL ===")
        
        topic = options["topic"]
        category = options["category"]
        
        self.stdout.write(f"üìù T√≥pico: {topic}")
        self.stdout.write(f"üè∑Ô∏è  Categoria: {category}")
        
        # Gerar t√≠tulo
        title = f"{topic}: An√°lise Completa 2025"
        
        # Gerar conte√∫do b√°sico
        content = f"""<p class="dek">An√°lise completa sobre {topic.lower()}, oferecendo informa√ß√µes atualizadas e insights valiosos.</p>

<h2>{topic}: An√°lise Completa</h2>

<p>Uma an√°lise detalhada sobre {topic.lower()} e seu impacto no cen√°rio atual brasileiro. Este tema tem ganhado cada vez mais relev√¢ncia no Brasil, merecendo aten√ß√£o especial dos profissionais e interessados na √°rea.</p>

<h3>Introdu√ß√£o</h3>

<p>Para compreender completamente a import√¢ncia de {topic.lower()}, √© fundamental analisar seu contexto hist√≥rico e sua evolu√ß√£o ao longo do tempo. O Brasil, com sua rica diversidade cultural e geogr√°fica, apresenta caracter√≠sticas √∫nicas que influenciam diretamente como este tema se desenvolve em nosso pa√≠s.</p>

<h3>Desenvolvimento Principal</h3>

<p>Os especialistas brasileiros destacam que {topic.lower()} tem ganhado cada vez mais relev√¢ncia no cen√°rio nacional. As mudan√ßas observadas nos √∫ltimos meses indicam uma tend√™ncia consistente que merece aten√ß√£o especial dos profissionais da √°rea.</p>

<p>Esta evolu√ß√£o tem sido acompanhada de perto por analistas e pesquisadores que estudam o impacto dessas transforma√ß√µes na sociedade brasileira. Os dados mais recentes mostram uma evolu√ß√£o positiva em diversos indicadores relacionados ao tema.</p>

<h3>Impacto no Brasil</h3>

<p>A popula√ß√£o brasileira tem sentido diretamente os efeitos das transforma√ß√µes relacionadas a {topic.lower()}. Desde as grandes metr√≥poles como S√£o Paulo e Rio de Janeiro at√© as cidades do interior, √© poss√≠vel observar mudan√ßas significativas que afetam o dia a dia das pessoas.</p>

<p>Estas altera√ß√µes t√™m sido recebidas de forma positiva pela maioria da popula√ß√£o brasileira, que v√™ nas mudan√ßas uma oportunidade de melhoria na qualidade de vida e desenvolvimento do pa√≠s.</p>

<h3>Perspectivas Futuras</h3>

<p>As proje√ß√µes para {topic.lower()} indicam que esta tend√™ncia deve se manter nos pr√≥ximos anos, com poss√≠veis desenvolvimentos que podem trazer benef√≠cios adicionais para o Brasil. Os analistas s√£o cautelosamente otimistas quanto ao futuro.</p>

<h3>Conclus√£o</h3>

<p>Esta mat√©ria sobre {topic.lower()} foi desenvolvida com base em informa√ß√µes atualizadas e an√°lises de especialistas da √°rea. O RadarBR continua acompanhando os desdobramentos desta not√≠cia e manter√° os leitores informados sobre novos desenvolvimentos relacionados ao tema.</p>

<p>O cen√°rio atual √© promissor e indica que o Brasil est√° no caminho certo para se consolidar como uma refer√™ncia em {topic.lower()}.</p>"""

        # Contar palavras
        word_count = len(strip_tags(content).split())
        
        self.stdout.write(f"üì∞ T√≠tulo: {title}")
        self.stdout.write(f"üìä Palavras: {word_count}")
        
        if options["dry_run"]:
            self.stdout.write("üîç MODO DRY-RUN - Simula√ß√£o apenas")
            return
        
        # Criar not√≠cia
        try:
            Noticia = apps.get_model("rb_noticias", "Noticia")
            Categoria = apps.get_model("rb_noticias", "Categoria")
            
            # Obter categoria
            cat = Categoria.objects.filter(nome=category.title()).first()
            if not cat:
                cat, created = Categoria.objects.get_or_create(
                    slug=slugify(category)[:140],
                    defaults={"nome": category.title()}
                )
            
            slug = slugify(f"{title}-{timezone.now().strftime('%Y%m%d-%H%M%S')}")[:180]
            
            noticia = Noticia.objects.create(
                titulo=title,
                slug=slug,
                conteudo=content,
                publicado_em=timezone.now(),
                categoria=cat,
                fonte_url=f"manual-{timezone.now().strftime('%Y%m%d-%H%M%S')}-{topic[:20].replace(' ', '-')}",
                fonte_nome="RadarBR Manual",
                status=1
            )
            
            self.stdout.write(f"‚úÖ Artigo publicado: {title}")
            self.stdout.write(f"üîó URL: /noticia/{slug}/")
            
        except Exception as e:
            self.stdout.write(f"‚ùå Erro: {e}")
