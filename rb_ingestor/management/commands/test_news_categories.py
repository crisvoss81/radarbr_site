# rb_ingestor/management/commands/test_news_categories.py
"""
Comando para testar se as APIs de not√≠cias retornam categorias
"""
from django.core.management.base import BaseCommand

class Command(BaseCommand):
    help = "Testa se as APIs de not√≠cias retornam categorias"

    def handle(self, *args, **options):
        self.stdout.write("=== TESTE DE CATEGORIAS DAS APIS DE NOT√çCIAS ===")
        
        # Testar diferentes temas usando GNews
        test_topics = [
            "futebol brasileiro",
            "economia brasileira", 
            "pol√≠tica nacional",
            "tecnologia",
            "sa√∫de p√∫blica"
        ]
        
        for topic in test_topics:
            self.stdout.write(f"\nüîç Testando: {topic}")
            
            try:
                from gnews import GNews
                
                # Configurar GNews
                google_news = GNews(
                    language='pt', 
                    country='BR', 
                    period='7d',
                    max_results=3
                )
                
                # Buscar not√≠cias
                articles = google_news.get_news(topic)
                
                if articles:
                    for i, article in enumerate(articles, 1):
                        title = article.get('title', '')[:50]
                        # GNews n√£o retorna categoria diretamente
                        # Vamos verificar outros campos dispon√≠veis
                        available_fields = list(article.keys())
                        
                        self.stdout.write(f"  {i}. {title}...")
                        self.stdout.write(f"     Campos dispon√≠veis: {available_fields}")
                        self.stdout.write(f"     Fonte: {article.get('publisher', {}).get('title', 'N/A')}")
                else:
                    self.stdout.write(f"  ‚ùå Nenhuma not√≠cia encontrada")
                    
            except Exception as e:
                self.stdout.write(f"  ‚ùå Erro: {e}")
        
        self.stdout.write("\n=== CONCLUS√ÉO ===")
        self.stdout.write("GNews n√£o retorna categoria diretamente.")
        self.stdout.write("Sistema inteligente ser√° usado como fallback.")
        self.stdout.write("=== FIM DOS TESTES ===")
