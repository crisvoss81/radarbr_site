#!/bin/bash
# Script de automa√ß√£o simplificado para Render
# Vers√£o robusta que funciona mesmo com limita√ß√µes de recursos

set -e

echo "=== AUTOMACAO RENDER RADARBR ==="
echo "Executado em: $(date)"
echo "Diret√≥rio: $(pwd)"

# Mudar para o diret√≥rio do projeto
cd /opt/render/project/src

# Ativar ambiente virtual se existir
if [ -d ".venv" ]; then
    echo "Ativando ambiente virtual..."
    source .venv/bin/activate
fi

# Fun√ß√£o para log
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

# Verificar se Django est√° funcionando
log "Verificando Django..."
python manage.py check --deploy

# Executar migra√ß√µes se necess√°rio
log "Verificando migra√ß√µes..."
python manage.py migrate --noinput

# Executar automa√ß√£o com fallbacks
log "Executando automa√ß√£o..."

# Tentar comando principal primeiro
if python manage.py automacao_render --limit 3; then
    log "‚úÖ Automa√ß√£o principal executada com sucesso"
elif python manage.py automacao_simples --limit 3 --force; then
    log "‚úÖ Automa√ß√£o simples executada com sucesso (fallback 1)"
elif python manage.py auto_publish --quick --limit 2; then
    log "‚úÖ Auto publish executado com sucesso (fallback 2)"
else
    log "‚ùå Todos os comandos de automa√ß√£o falharam"
    exit 1
fi

# Coletar arquivos est√°ticos
log "Coletando arquivos est√°ticos..."
python manage.py collectstatic --noinput

# Ping sitemap
log "Fazendo ping do sitemap..."
python manage.py ping_sitemap || log "‚ö† Ping sitemap falhou, continuando..."

# Mostrar estat√≠sticas
log "üìä Estat√≠sticas:"
python manage.py shell -c "
from django.utils import timezone
from datetime import timedelta
from rb_noticias.models import Noticia

total = Noticia.objects.count()
recentes = Noticia.objects.filter(
    criado_em__gte=timezone.now() - timedelta(hours=1)
).count()

print(f'Total: {total} not√≠cias')
print(f'√öltima hora: {recentes} not√≠cias')
"

log "=== AUTOMACAO CONCLUIDA ==="
