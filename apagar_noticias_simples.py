#!/usr/bin/env python
"""
Script para apagar not√≠cias no Render
Execute diretamente: python apagar_noticias_simples.py
"""
import os
import sys
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')
django.setup()

from rb_noticias.models import Noticia

def apagar_ultimas_noticias(num=5):
    """Apaga as √∫ltimas not√≠cias criadas"""
    print("=== APAGADOR DE NOT√çCIAS SIMPLES ===")
    
    # Buscar as √∫ltimas not√≠cias
    ultimas_noticias = Noticia.objects.order_by('-criado_em')[:num]
    
    if not ultimas_noticias.exists():
        print("‚ùå Nenhuma not√≠cia encontrada para apagar.")
        return
    
    # Mostrar not√≠cias que ser√£o apagadas
    print(f"\nüì∞ √öLTIMAS {num} NOT√çCIAS QUE SER√ÉO APAGADAS:")
    for i, noticia in enumerate(ultimas_noticias, 1):
        print(f"{i}. {noticia.titulo}")
        print(f"   Categoria: {noticia.categoria.nome if noticia.categoria else 'Sem categoria'}")
        print(f"   Criado em: {noticia.criado_em}")
        print("")
    
    # Confirmar exclus√£o
    confirmacao = input(f"\n‚ö†Ô∏è Tem certeza que deseja apagar estas {len(ultimas_noticias)} not√≠cias? (s/N): ")
    if confirmacao.lower() not in ['s', 'sim', 'y', 'yes']:
        print("‚ùå Opera√ß√£o cancelada.")
        return
    
    # Apagar not√≠cias
    apagadas = 0
    for noticia in ultimas_noticias:
        try:
            titulo = noticia.titulo
            noticia.delete()
            apagadas += 1
            print(f"‚úì Apagada: {titulo}")
        except Exception as e:
            print(f"‚úó Erro ao apagar '{noticia.titulo}': {e}")
    
    # Resumo final
    print(f"\n‚úÖ CONCLU√çDO:")
    print(f"‚úÖ Not√≠cias apagadas: {apagadas}")
    print(f"üìä Total restante no sistema: {Noticia.objects.count()}")
    
    # Mostrar as novas √∫ltimas not√≠cias
    if Noticia.objects.exists():
        print(f"\nüì∞ NOVAS √öLTIMAS 3 NOT√çCIAS:")
        for n in Noticia.objects.order_by('-criado_em')[:3]:
            print(f"   ‚Ä¢ {n.titulo}")
    else:
        print("\nüì∞ Nenhuma not√≠cia restante no sistema.")

def listar_ultimas_noticias(num=10):
    """Lista as √∫ltimas not√≠cias sem apagar"""
    print("=== √öLTIMAS NOT√çCIAS ===")
    
    noticias = Noticia.objects.order_by('-criado_em')[:num]
    
    if not noticias.exists():
        print("‚ùå Nenhuma not√≠cia encontrada.")
        return
    
    for i, n in enumerate(noticias, 1):
        print(f"{i}. {n.titulo}")
        print(f"   Categoria: {n.categoria.nome if n.categoria else 'Sem categoria'}")
        print(f"   Criado em: {n.criado_em}")
        print("")

if __name__ == "__main__":
    print("=== APAGADOR DE NOT√çCIAS ===")
    print("1. Listar √∫ltimas not√≠cias")
    print("2. Apagar √∫ltimas 5 not√≠cias")
    print("3. Apagar √∫ltimas 3 not√≠cias")
    print("4. Apagar √∫ltima not√≠cia")
    print("5. Sair")
    
    opcao = input("\nEscolha uma op√ß√£o (1-5): ")
    
    if opcao == "1":
        num = input("Quantas not√≠cias listar? (padr√£o: 10): ")
        try:
            num = int(num) if num else 10
        except ValueError:
            num = 10
        listar_ultimas_noticias(num)
        
    elif opcao == "2":
        apagar_ultimas_noticias(5)
        
    elif opcao == "3":
        apagar_ultimas_noticias(3)
        
    elif opcao == "4":
        apagar_ultimas_noticias(1)
        
    elif opcao == "5":
        print("Saindo...")
    else:
        print("Op√ß√£o inv√°lida.")
