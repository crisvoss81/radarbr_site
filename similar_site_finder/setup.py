#!/usr/bin/env python3
"""
Script de inicializa√ß√£o do SimilarSiteFinder
"""

import os
import sys
import subprocess
import shutil
from pathlib import Path

def check_python_version():
    """Verifica se a vers√£o do Python √© compat√≠vel"""
    if sys.version_info < (3, 8):
        print("‚ùå Python 3.8 ou superior √© necess√°rio")
        print(f"Vers√£o atual: {sys.version}")
        return False
    print(f"‚úÖ Python {sys.version.split()[0]} detectado")
    return True

def install_dependencies():
    """Instala as depend√™ncias do projeto"""
    print("üì¶ Instalando depend√™ncias...")
    try:
        subprocess.check_call([sys.executable, "-m", "pip", "install", "-r", "requirements.txt"])
        print("‚úÖ Depend√™ncias instaladas com sucesso")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Erro ao instalar depend√™ncias: {e}")
        return False

def setup_environment():
    """Configura o arquivo de ambiente"""
    env_file = Path(".env")
    env_example = Path("env_example.txt")
    
    if not env_file.exists() and env_example.exists():
        print("‚öôÔ∏è Configurando arquivo de ambiente...")
        shutil.copy(env_example, env_file)
        print("‚úÖ Arquivo .env criado")
        print("‚ö†Ô∏è IMPORTANTE: Edite o arquivo .env com suas configura√ß√µes:")
        print("   - SIMILARWEB_API_KEY: Sua chave da API SimilarWeb")
        print("   - FLASK_SECRET_KEY: Uma chave secreta para o Flask")
        return True
    elif env_file.exists():
        print("‚úÖ Arquivo .env j√° existe")
        return True
    else:
        print("‚ùå Arquivo env_example.txt n√£o encontrado")
        return False

def create_directories():
    """Cria diret√≥rios necess√°rios"""
    directories = ["static", "static/css", "static/js", "static/images", "templates"]
    
    for directory in directories:
        Path(directory).mkdir(parents=True, exist_ok=True)
    
    print("‚úÖ Diret√≥rios criados")

def initialize_database():
    """Inicializa o banco de dados"""
    print("üóÑÔ∏è Inicializando banco de dados...")
    try:
        from app import create_app
        from models import db
        
        app = create_app()
        with app.app_context():
            db.create_all()
        
        print("‚úÖ Banco de dados inicializado")
        return True
    except Exception as e:
        print(f"‚ùå Erro ao inicializar banco de dados: {e}")
        return False

def test_similarweb_api():
    """Testa a conex√£o com a API SimilarWeb"""
    print("üîç Testando conex√£o com SimilarWeb API...")
    try:
        from similarweb_api import SimilarWebAPI
        from config import Config
        
        api_key = os.getenv('SIMILARWEB_API_KEY')
        if not api_key or api_key == 'sua_chave_api_similarweb_aqui':
            print("‚ö†Ô∏è SIMILARWEB_API_KEY n√£o configurada no arquivo .env")
            print("   Configure sua chave da API SimilarWeb para usar o sistema")
            return False
        
        api = SimilarWebAPI(api_key)
        if api.validate_api_key():
            print("‚úÖ Conex√£o com SimilarWeb API funcionando")
            return True
        else:
            print("‚ùå Falha na valida√ß√£o da API SimilarWeb")
            print("   Verifique se a chave da API est√° correta")
            return False
            
    except Exception as e:
        print(f"‚ùå Erro ao testar API SimilarWeb: {e}")
        return False

def main():
    """Fun√ß√£o principal de inicializa√ß√£o"""
    print("üöÄ Inicializando SimilarSiteFinder...")
    print("=" * 50)
    
    # Verificar vers√£o do Python
    if not check_python_version():
        return False
    
    # Criar diret√≥rios
    create_directories()
    
    # Instalar depend√™ncias
    if not install_dependencies():
        return False
    
    # Configurar ambiente
    if not setup_environment():
        return False
    
    # Inicializar banco de dados
    if not initialize_database():
        return False
    
    # Testar API SimilarWeb
    test_similarweb_api()
    
    print("=" * 50)
    print("üéâ SimilarSiteFinder inicializado com sucesso!")
    print("\nüìã Pr√≥ximos passos:")
    print("1. Edite o arquivo .env com suas configura√ß√µes")
    print("2. Execute: python app.py")
    print("3. Acesse: http://localhost:5000")
    print("\nüìö Documenta√ß√£o completa no README.md")
    
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
